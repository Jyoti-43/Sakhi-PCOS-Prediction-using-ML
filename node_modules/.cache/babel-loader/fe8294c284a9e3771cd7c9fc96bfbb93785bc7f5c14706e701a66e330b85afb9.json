{"ast":null,"code":"var _jsxFileName = \"D:\\\\ai-mini-project-5stars\\\\sakhi\\\\src\\\\Components\\\\ForgetPassword\\\\ResetOTP.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./resetotp.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetOTP = () => {\n  _s();\n  const [timer, setTimer] = useState(60); // Initial timer value (e.g., 60 seconds)\n  const [isResendDisabled, setIsResendDisabled] = useState(true);\n  useEffect(() => {\n    if (timer > 0) {\n      const intervalId = setInterval(() => {\n        setTimer(prevTimer => prevTimer - 1);\n      }, 1000);\n      return () => clearInterval(intervalId);\n    } else {\n      setIsResendDisabled(false);\n    }\n  }, [timer]);\n  const handleResendCode = () => {\n    setTimer(60); // Reset timer to 60 seconds\n    setIsResendDisabled(true);\n    // Add logic to resend the code here\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Forgot Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please enter your email to send a reset password link.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Enter your email\",\n            value: email,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSendResetLink,\n            children: \"Send Reset Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"message\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetOTP, \"8YJEX767GD2kou33msEWXsDeBG4=\");\n_c = ResetOTP;\nexport default ResetOTP;\nvar _c;\n$RefreshReg$(_c, \"ResetOTP\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ResetOTP","_s","timer","setTimer","isResendDisabled","setIsResendDisabled","intervalId","setInterval","prevTimer","clearInterval","handleResendCode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","email","onChange","handleChange","onClick","handleSendResetLink","message","_c","$RefreshReg$"],"sources":["D:/ai-mini-project-5stars/sakhi/src/Components/ForgetPassword/ResetOTP.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./resetotp.css\";\r\n\r\nconst ResetOTP = () => {\r\n\r\n    const [timer, setTimer] = useState(60); // Initial timer value (e.g., 60 seconds)\r\n    const [isResendDisabled, setIsResendDisabled] = useState(true);\r\n  \r\n    useEffect(() => {\r\n      if (timer > 0) {\r\n        const intervalId = setInterval(() => {\r\n          setTimer((prevTimer) => prevTimer - 1);\r\n        }, 1000);\r\n        return () => clearInterval(intervalId);\r\n      } else {\r\n        setIsResendDisabled(false);\r\n      }\r\n    }, [timer]);\r\n  \r\n    const handleResendCode = () => {\r\n      setTimer(60); // Reset timer to 60 seconds\r\n      setIsResendDisabled(true);\r\n      // Add logic to resend the code here\r\n    };\r\n  \r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        \r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n            <h1>Forgot Password</h1>\r\n          <p>Please enter your email to send a reset password link.</p>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n          <button onClick={handleSendResetLink}>Send Reset Link</button>\r\n          {message && <p className=\"message\">{message}</p>}\r\n           \r\n              \r\n            </div>\r\n          </div>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ResetOTP;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACO,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE9DD,SAAS,CAAC,MAAM;IACd,IAAIM,KAAK,GAAG,CAAC,EAAE;MACb,MAAMI,UAAU,GAAGC,WAAW,CAAC,MAAM;QACnCJ,QAAQ,CAAEK,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;MACxC,CAAC,EAAE,IAAI,CAAC;MACR,OAAO,MAAMC,aAAa,CAACH,UAAU,CAAC;IACxC,CAAC,MAAM;MACLD,mBAAmB,CAAC,KAAK,CAAC;IAC5B;EACF,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;EAEX,MAAMQ,gBAAgB,GAAGA,CAAA,KAAM;IAC7BP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IACdE,mBAAmB,CAAC,IAAI,CAAC;IACzB;EACF,CAAC;EAGH,oBACEN,OAAA;IAAKY,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBb,OAAA;MAAKY,SAAS,EAAC,KAAK;MAAAC,QAAA,eAEhBb,OAAA;QAAKY,SAAS,EAAC,MAAM;QAAAC,QAAA,eACnBb,OAAA;UAAKY,SAAS,EAAC,WAAW;UAAAC,QAAA,gBAC1Bb,OAAA;YAAAa,QAAA,EAAI;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC1BjB,OAAA;YAAAa,QAAA,EAAG;UAAsD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAC7DjB,OAAA;YACEkB,IAAI,EAAC,OAAO;YACZC,WAAW,EAAC,kBAAkB;YAC9BC,KAAK,EAAEC,KAAM;YACbC,QAAQ,EAAEC;UAAa;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC,eACFjB,OAAA;YAAQwB,OAAO,EAAEC,mBAAoB;YAAAZ,QAAA,EAAC;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAC7DS,OAAO,iBAAI1B,OAAA;YAAGY,SAAS,EAAC,SAAS;YAAAC,QAAA,EAAEa;UAAO;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGzC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACf,EAAA,CA/CID,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAgDd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}