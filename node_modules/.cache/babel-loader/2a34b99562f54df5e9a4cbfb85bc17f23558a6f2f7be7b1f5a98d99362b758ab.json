{"ast":null,"code":"var _jsxFileName = \"D:\\\\ai-mini-project-5stars\\\\sakhi\\\\src\\\\Components\\\\ForgetPassword\\\\ResetOTP.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./resetotp.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetOTP = () => {\n  _s();\n  const [timer, setTimer] = useState(60); // Initial timer value (e.g., 60 seconds)\n  const [isResendDisabled, setIsResendDisabled] = useState(true);\n  useEffect(() => {\n    if (timer > 0) {\n      const intervalId = setInterval(() => {\n        setTimer(prevTimer => prevTimer - 1);\n      }, 1000);\n      return () => clearInterval(intervalId);\n    } else {\n      setIsResendDisabled(false);\n    }\n  }, [timer]);\n  const handleResendCode = () => {\n    setTimer(60); // Reset timer to 60 seconds\n    setIsResendDisabled(true);\n    // Add logic to resend the code here\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-9 offset-md-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Reset OTP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Please enter the OTP sent to your email.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"otp\",\n                  children: \"OTP\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  id: \"otp\",\n                  placeholder: \"Enter OTP\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleResendCode,\n                disabled: isResendDisabled,\n                children: \"Resend Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"timer\",\n                children: timer > 0 ? `Resend available in ${timer}s` : 'You can resend the code now'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetOTP, \"8YJEX767GD2kou33msEWXsDeBG4=\");\n_c = ResetOTP;\nexport default ResetOTP;\nvar _c;\n$RefreshReg$(_c, \"ResetOTP\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ResetOTP","_s","timer","setTimer","useState","isResendDisabled","setIsResendDisabled","useEffect","intervalId","setInterval","prevTimer","clearInterval","handleResendCode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/ai-mini-project-5stars/sakhi/src/Components/ForgetPassword/ResetOTP.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./resetotp.css\";\r\nconst ResetOTP = () => {\r\n\r\n    const [timer, setTimer] = useState(60); // Initial timer value (e.g., 60 seconds)\r\n    const [isResendDisabled, setIsResendDisabled] = useState(true);\r\n  \r\n    useEffect(() => {\r\n      if (timer > 0) {\r\n        const intervalId = setInterval(() => {\r\n          setTimer((prevTimer) => prevTimer - 1);\r\n        }, 1000);\r\n        return () => clearInterval(intervalId);\r\n      } else {\r\n        setIsResendDisabled(false);\r\n      }\r\n    }, [timer]);\r\n  \r\n    const handleResendCode = () => {\r\n      setTimer(60); // Reset timer to 60 seconds\r\n      setIsResendDisabled(true);\r\n      // Add logic to resend the code here\r\n    };\r\n  \r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-9 offset-md-3\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h1>Reset OTP</h1>\r\n              <p>Please enter the OTP sent to your email.</p>\r\n              <form>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"otp\">OTP</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"otp\"\r\n                    placeholder=\"Enter OTP\"\r\n                  />\r\n                </div>\r\n                {/* <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    id=\"password\"\r\n                    placeholder=\"Enter Password\"\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    id=\"confirmPassword\"\r\n                    placeholder=\"Confirm Password\"\r\n                  />\r\n                </div> */}\r\n                <button onClick={handleResendCode} disabled={isResendDisabled}>\r\n              Resend Code\r\n            </button>\r\n            <span className=\"timer\">{timer > 0 ? `Resend available in ${timer}s` : 'You can resend the code now'}</span>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ResetOTP;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}